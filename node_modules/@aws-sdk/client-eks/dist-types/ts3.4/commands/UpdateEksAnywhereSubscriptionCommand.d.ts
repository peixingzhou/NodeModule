import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  EKSClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EKSClient";
import {
  UpdateEksAnywhereSubscriptionRequest,
  UpdateEksAnywhereSubscriptionResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface UpdateEksAnywhereSubscriptionCommandInput
  extends UpdateEksAnywhereSubscriptionRequest {}
export interface UpdateEksAnywhereSubscriptionCommandOutput
  extends UpdateEksAnywhereSubscriptionResponse,
    __MetadataBearer {}
export declare class UpdateEksAnywhereSubscriptionCommand extends $Command<
  UpdateEksAnywhereSubscriptionCommandInput,
  UpdateEksAnywhereSubscriptionCommandOutput,
  EKSClientResolvedConfig
> {
  readonly input: UpdateEksAnywhereSubscriptionCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: UpdateEksAnywhereSubscriptionCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EKSClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    UpdateEksAnywhereSubscriptionCommandInput,
    UpdateEksAnywhereSubscriptionCommandOutput
  >;
  private serialize;
  private deserialize;
}
