import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  EKSClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EKSClient";
import {
  UpdatePodIdentityAssociationRequest,
  UpdatePodIdentityAssociationResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface UpdatePodIdentityAssociationCommandInput
  extends UpdatePodIdentityAssociationRequest {}
export interface UpdatePodIdentityAssociationCommandOutput
  extends UpdatePodIdentityAssociationResponse,
    __MetadataBearer {}
export declare class UpdatePodIdentityAssociationCommand extends $Command<
  UpdatePodIdentityAssociationCommandInput,
  UpdatePodIdentityAssociationCommandOutput,
  EKSClientResolvedConfig
> {
  readonly input: UpdatePodIdentityAssociationCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: UpdatePodIdentityAssociationCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EKSClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    UpdatePodIdentityAssociationCommandInput,
    UpdatePodIdentityAssociationCommandOutput
  >;
  private serialize;
  private deserialize;
}
