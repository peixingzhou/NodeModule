import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  EKSClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EKSClient";
import {
  DeleteEksAnywhereSubscriptionRequest,
  DeleteEksAnywhereSubscriptionResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface DeleteEksAnywhereSubscriptionCommandInput
  extends DeleteEksAnywhereSubscriptionRequest {}
export interface DeleteEksAnywhereSubscriptionCommandOutput
  extends DeleteEksAnywhereSubscriptionResponse,
    __MetadataBearer {}
export declare class DeleteEksAnywhereSubscriptionCommand extends $Command<
  DeleteEksAnywhereSubscriptionCommandInput,
  DeleteEksAnywhereSubscriptionCommandOutput,
  EKSClientResolvedConfig
> {
  readonly input: DeleteEksAnywhereSubscriptionCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: DeleteEksAnywhereSubscriptionCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EKSClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    DeleteEksAnywhereSubscriptionCommandInput,
    DeleteEksAnywhereSubscriptionCommandOutput
  >;
  private serialize;
  private deserialize;
}
