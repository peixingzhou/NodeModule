import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  EKSClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EKSClient";
import {
  UpdateClusterVersionRequest,
  UpdateClusterVersionResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface UpdateClusterVersionCommandInput
  extends UpdateClusterVersionRequest {}
export interface UpdateClusterVersionCommandOutput
  extends UpdateClusterVersionResponse,
    __MetadataBearer {}
export declare class UpdateClusterVersionCommand extends $Command<
  UpdateClusterVersionCommandInput,
  UpdateClusterVersionCommandOutput,
  EKSClientResolvedConfig
> {
  readonly input: UpdateClusterVersionCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: UpdateClusterVersionCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EKSClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    UpdateClusterVersionCommandInput,
    UpdateClusterVersionCommandOutput
  >;
  private serialize;
  private deserialize;
}
